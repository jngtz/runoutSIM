% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random_walk.R
\name{runoutSim}
\alias{runoutSim}
\title{Simulate Runout Paths Using Random Walk and PCM Physics}
\usage{
runoutSim(
  dem,
  xy,
  mu = 0.1,
  md = 40,
  int_vel = 1,
  slp_thresh = 30,
  exp_div = 3,
  per_fct = 2,
  walks = 100,
  source_connect = FALSE,
  connect_feature = NULL
)
}
\arguments{
\item{dem}{SpatRaster. A digital elevation model (DEM), ideally sink-filled and hydrologically correct.}

\item{xy}{Numeric vector or matrix. Coordinates of one or more source points (e.g., \code{cbind(x, y)}).}

\item{mu}{Numeric. Basal friction coefficient used in the PCM velocity model (default = \code{0.1}).}

\item{md}{Numeric. Mass-to-drag ratio used in the PCM model to control deceleration from air drag and terrain resistance.}

\item{int_vel}{Numeric. Initial velocity for PCM model.}

\item{slp_thresh}{Numeric. Minimum slope (in degrees) required for particle movement. Particles stop when local slope falls below this value.}

\item{exp_div}{Numeric. Lateral dispersion exponent controlling spread of paths away from steepest descent. Higher values = less lateral dispersion.}

\item{per_fct}{Numeric. Persistence factor controlling how strongly particles follow the current downslope direction. Values >1 increase directional inertia.}

\item{walks}{Integer. Number of random walk particles to simulate per source point (default = \code{1000}).}

\item{source_connect}{Logical. If \code{TRUE}, particles are flagged based on whether they intersect a defined connectivity feature (e.g., stream channel).}

\item{connect_feature}{SpatRaster. Optional raster of connectivity features created using \code{makeConnFeature()}. Required if \code{source_connect = TRUE}.}
}
\value{
A list of simulated particle paths. Each element contains a matrix or list of stepwise information
(e.g., coordinates, step index, velocity, slope, and connectivity).
}
\description{
Simulates the runout paths of mass movements (e.g., debris flows, snow avalanches) from one or more source points
using a physically-informed random walk model. Each path incorporates slope-based directionality,
lateral dispersion, and energy loss based on the Perla-Cheng-McClung (PCM) velocity model.
}
\details{
This function simulates gravity-driven runout from user-defined source cells. Particle paths evolve through
a random walk process biased by terrain slope and lateral spread rules. At each step, the PCM velocity model
updates particle speed based on slope, friction (\code{mu}), and mass-to-drag ratio (\code{md}).

Paths terminate when slope falls below \code{slp_thresh}, or particles encounter terrain conditions that no longer allow
continued downhill movement.
}
\section{PCM Model}{

The PCM model (Perla-Cheng-McClung) describes velocity as a balance between gravitational acceleration,
frictional resistance, and air drag. Higher \code{md} values imply greater momentum and less deceleration from drag.
}

\section{Applicability}{

This model can be applied to a variety of gravity-driven mass movements such as \strong{debris flows}, \strong{snow avalanches},
and other similar phenomena. The random walk approach, combined with the PCM velocity model, makes it highly versatile for
simulating different types of runout based on the underlying physical principles of mass movement.
}

\section{Connectivity}{

If \code{source_connect = TRUE}, simulated paths are checked for intersection with a connectivity feature raster.
This enables downstream analysis of connectivity probability (\code{connToRaster()}), or flow velocity surfaces (\code{velocityToRaster()}).
}

\examples{
\dontrun{
Load DEM and connectivity feature
dem <- terra::rast("Data/elev_nosinks.tif")
river <- sf::st_read("Data/river_channel.shp")
feature_mask <- makeConnFeature(river, dem)

# Simulate runout from a single source point
sim_paths <- runoutSim(dem = dem, xy = c(500000, 5200000), mu = 0.08, md = 140,
                       slp_thresh = 35, exp_div = 3, per_fct = 1.95, walks = 1000,
                       source_connect = TRUE, feature_layer = feature_mask)

# Convert results to raster
trav_freq <- walksToRaster(sim_paths, dem)
trav_prob <- rasterCdf(trav_freq)
conn_prob <- connToRaster(sim_paths, dem)
vel_map   <- velocityToRaster(sim_paths, dem)
}
}
\seealso{
\code{\link{pcm}}, \code{\link{makeConnFeature}}, \code{\link{walksToRaster}},
\code{\link{connToRaster}}, \code{\link{velocityToRaster}}
}
